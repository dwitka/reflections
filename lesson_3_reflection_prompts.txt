When would you want to use a remote repository rather than keeping all your work
local?

	One reason would be if you're always on the go travelling and need to access
	your work from whereever you are. Another reason would be if you're running
	out of space on your computer. The best reason would probably be if you're
	working on a project within a group and everyone needs access to the files.

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

	I don't know.

Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

    	Forks are a way to get a repository that belongs to someone else and add that
	repository to your account on github. Cloning is a way to add a repository
	from your github account to your local repository. Branching acts on a 
	repository and lets you make a new version of your repository, one that is
	different than the master branch.


What is the benefit of having a copy of the last known state of the remote
stored locally?

	Your master copy can then be merged with the remote copy and any
	conflicts that arise can be mediated by you. Once the conflicts
	have been resolved pushing your master repository back to github
	should pose no issues.

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

	I would use another version control system such as Subversion, or I would
	use Google Docs. Considering that Google Docs is easy to use without much
	of a learning curve, if none of your collaborators know svn then this would
	be the best choice. Alternatively, if everyone on the team is familiar with
	svn than that would be a more efficient and reliable source.  

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

    Fill in your answer here